/**
 * 000. ../ -> 상위 폴더
 * 000. ../../ -> 상위 폴더의 상위 폴더
 * 000. ../../../../ 상위 폴더의 상위 폴더의 상위 폴더의 상위 폴더
 * 
 * 1. pwd(print working directory) -> 현재 터미널이 위치한 디렉토리 경로
 * 2. ls(list) -> 현재 디렉토리의 파일/폴더 목록 보기
 * 2.1 ls 폴더명 -> 폴더명의 파일/폴더 목록 보기
 * 2-2 ls -l
 * drwxr-xr-x  3 sehyeounkim  staff   96  8  6 10:11 00
 * -rw-r--r--@ 1 sehyeounkim  staff  176  8  5 17:29 README.md
 * drwxr-xr-x  4 sehyeounkim  staff  128  8  6 09:29 learn-js
 * 
 * 3. re (remove) -> 파일/폴더 삭제
   3-1. rm 파일명/폴더명 -> 파일 삭제
    3-1-1. rm -rf 파일명/폴더명 -> 강제로 삭제
    3-1-2. rm -rf ./03 -> 현재 폴더의 03 폴더 삭제
    3-1-3. rm -rf 03 -> 3-1-2. 와 같은 의미
    3-1-4. rm -rf 03/1.js -> 03 폴더의 01.js 파일 삭제
    3-1-5. rm -rf 03/*(asterisk) -> 03 폴더의 모든 파일/폴더 삭제
    3-1-6. rm -rf ./* -> (주의) 현재 폴더의 모든 파일/폴더 삭제 -> 휴지통에도 안 들어감, 복구 불가
    3-1-7. rm -rf /* -> **(**진짜진짜진짜주의**) 초보자가 .을 잘 빼먹음
    4. cd (change directory) -> 디렉토리 이동
   4-1. cd 폴더명 -> 해당 폴더로 이동
   4-2. cd .. -> 상위 폴더로 이동
   4-3. cd ../.. -> 상위 폴더의 상위 폴더로 이동
   4-4. cd ../폴더명 -> 상위 폴더의 해당 폴더로 이동 (형제 폴더간 이동)
   4-5. cd ../../폴더명 -> 상위 폴더의 상위 폴더의 해당 폴더로 이동
   5. mkdir (make directory) -> 폴더 생성
    5-1. mkdir 폴더명 -> 해당 폴더 생성
    5-2. mkdir 폴더명/하위폴더명 -> 안 됨
  6. touch -> 파일 생성
   6-1. touch 파일명.js -> 해당 파일 생성
  7. clear -> 터미널 명령어를 정리, 보이는 터미널만 (실제 명령어는 지워지지 않음)
8. 화살표 위/아래 -> 이전에 입력한 명령어 불러오기 가능
  9. 일부만 입력 후 tab -> 자동 완성 기능
  */
/*
npm
 의존성
  예를 들어 닌텐도를 하려면 게임칩이라는게 꼭 필요함, 의존적이다
  프로그램도 얘만 있는게 아니라 수 많은 패키지들이 필요함
 그걸 npm 이라는 노드 패키지 매니저를 통해 관리함
*/

//npx

/*
relaod window -> 프로그램 안 끄고도 재부팅 한거 같음
 shift + cmd + p -> 명령어 팔레트
 reload window 입력 
 */