// // Q1.

// // ```jsx
// // //[연습문제 - 1부터 9까지 출력하기]
// // ```

for (i = 1; i <= 9; i++) {
  console.log(i);
}

// // Q2.

// // ```jsx
// // //[연습문제 - 1부터 9까지의 합 출력하기]
// // ```

let sum = 0;
for (i = 1; i <= 9; i++) {
  sum += i;
}
console.log(sum);

// // Q3.

// // ```jsx
// // //[연습문제 - 1부터 100까지 짝수만 출력하기]
// // ```

for (i = 1; i <= 100; i++) {
  if (i % 2 === 1) continue;
  console.log(i);
}

// // Q4.

// // ```jsx
// // /*
// // [연습문제 - 음수 걸러내기]

// // 배열에 음수값이 섞여있습니다.
// // 음수는 제외하고 양수들만 골라내어 합을 구하세요.

let numArr = [10, -10, 20, -30, 40];
let arrSum = 0;

for (const num of numArr) {
  if (num < 0) continue;
  arrSum += num;
}
console.log(arrSum);

// // Q5.

// // ```jsx
// // /*
// // [연습문제 - 홀짝 구분하기]

// // 0부터 15까지 출력하면서 각각의 수가 짝수인지 홀수인지
// // 구분하여 출력하도록 코드를 작성해주세요.

// // 출력 예시 )
// // 0 짝수
// // 1 홀수
// // 2 짝수
// // 3 홀수
// // 4 짝수
// // ... 중략 ..
// // 15 홀수
// // */
// // ```

for (i = 0; i <= 15; i++) {
  if (i % 2 === 0) console.log(`${i} 짝수`);
  else console.log(`${i} 홀수`);
}

// // Q6.

// // ```jsx
// // // 주어진 숫자 배열의 최댓값 찾기
const numArr2 = [7, 2, 9, 4, 5];
let max = 0;

for (const num of numArr2) {
  if (max < num) max = num;
}
console.log(max);

// // Q7.
// // // 짝수 인덱스의 요소만 새로운 배열 담기
// // // 배열의 .push() 메서드를 사용하세요.
const arr = ["a", "b", "c", "d", "e"];
let newArr = [];

for (const index in arr) {
  if (index % 2 === 1) continue;
  newArr.push(arr[index]);
}
console.log(newArr);

// // Q8.

// // ```jsx
// // // 구구단 3단 출력하기
// // ```

for (let i = 3; i <= 3; i++) {
  for (let j = 1; j <= 9; j++) {
    console.log(i + " x " + j + " = " + i * j);
  }
}

//연습문제 어려움
// ### 1. 피보나치 수열 계산

// 피보나치 수열의 특정 항까지 계산하는 예제입니다.

// - **문제**: 주어진 정수 N에 대해, 피보나치 수열의 처음 N항을 출력하는 프로그램을 작성하시오.
// - **입력**: N (정수, 1 이상)
// - **출력**: 피보나치 수열의 처음 N항을 배열로 출력.
// - 조건: 1항은 0, 2항은 1 이라고 가정합니다.
// - **예시**:
//     - **입력**: 10
//     - **출력**: `[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]`
// - **설명**: 피보나치 수열은 앞의 두 수의 합으로 다음 수를 생성하는 수열이다. 첫 두 항은 0과 1이다.

let n = 10; // 원하는 항의 수
let result = [];
result.push(0);
result.push(1);

// 피포나치 수열 로직
for (let i = 0; i < n - 2; i++) {
  result.push(result[i] + result[i + 1]);
}

console.log(`피보나치 수열(${n}항):`, result); //[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]

// ### 2. 소수 찾기

// - **문제**: 1부터 100까지의 소수를 찾아 출력하는 프로그램을 작성하시오.
// - **입력**: 없음
// - **출력**: 1부터 100까지의 소수를 배열로 출력.
// - **예시**:
//     - **출력**: `[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]`
// - **설명**: 소수는 1과 자신만을 약수로 가지는 자연수이다. 이 프로그램은 2부터 100까지의 숫자 중 소수를 찾는다.

let start = 1,
  end = 100; // 범위
let resultst = []; //소수 담을 배열

// // 소수 찾기 코드
for (let i = start + 1; i <= end; i++) {
  for (let j = 2; j <= i; j++) {
    if (i === j) resultst.push(i);
    if (i % j === 0) break;
  }
}

console.log(resultst); // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]

// ### 3. 배열 요소의 합 구하기

// - **문제**: 주어진 숫자 배열의 모든 요소의 합을 계산하는 프로그램을 작성하시오.
// - **입력**: `numbers` (배열, 예: `[5, 10, 15, 20, 25]`)
// - **출력**: 배열 요소의 합.
// - **예시**:
//     - **입력**: `[5, 10, 15, 20, 25]`
//     - **출력**: `75`
// - **설명**: 이 프로그램은 배열의 각 요소를 순회하며 합을 계산한다.

const numbers = [5, 10, 15, 20, 25]; // 배열

// // 합 계산 코드
let results = 0;
for (let i = 0; i < numbers.length; i++) {
  results += numbers[i];
}

console.log(results); // 75

// ### 4. 문자열 뒤집기

// - **문제**: 주어진 문자열을 뒤집어서 출력하는 프로그램을 작성하시오.
// - **입력**: `str` (문자열, 예: `"Hello, World!"`)
// - **출력**: 뒤집힌 문자열.
// - **예시**:
//     - **입력**: `"Hello, World!"`
//     - **출력**: `"!dlroW ,olleH"`
// - **설명**: 문자열을 끝에서부터 시작하여 차례로 각 문자를 추가하여 새로운 문자열을 만든다

const str = "Hello, World!";
let reversed = ""; //빈문자열로 초기화

// 문자열 뒤집기 로직
for (let i = str.length - 1; i >= 0; i--) {
  //인덱스 번호이기 때문에 length - 1
  reversed += str[i];
}

console.log("뒤집힌 문자열:", reversed); // "!dlroW ,olleH"

// ### 5. 특정 숫자까지의 곱 계산
// 5! → 5 * 4 * 3 * 2 * 1
// 4! → 4 * 3 * 2 * 1
// 2! ⇒ 2 * 1
// 1! → 1
// 0! → 1

// - **문제**: 주어진 정수 N의 팩토리얼을 계산하는 프로그램을 작성하시오.
// - **입력**: N (정수, 1 이상)
// - **출력**: N의 팩토리얼.
// - **예시**:
//     - **입력**: `5`
//     - **출력**: `120`
// - **설명**: 팩토리얼은 1부터 N까지의 모든 정수를 곱한 결과이다. 이 프로그램은 N까지 반복하여 곱을 계산한다.

let num = 5; // 예시 숫자
let factorial = 1;

for (let i = 1; i <= num; i++) {
  factorial *= i;
}

console.log(`${num}의 팩토리얼:`, factorial); // 출력 120

// ```

// 1. 암스트롱수
// - **문제**: 100부터 999까지의 세 자리 정수 중 암스트롱 수를 구해서 출력하세요.
// - **입력**: 없음
// - **출력**: 153, 370, 371, 407
// - **예시**:
//     - **입력**: 없음
//     - **출력**

//     ```
//     153
//     370
//     371
//     407
//     ```

// ```jsx
// /*
// [연습문제 - 암스트롱 수 구하기]
// 난이도 ★★★★★

// 100부터 999까지 암스트롱 수를 구하세요

// &암스트롱 수란?

// 암스트롱의 수는 세 자리의 정수 중에서 각 자리의 수를 세 제곱한 수의 합과 자신이 같은 수를 말합니다.
// 예를 들어 153 = 1 + 125 + 27 입니다.
// 이와 같은 수를 암스트롱의 수라고 말합니다.
// */
// ```

// 153

// 1 → 1 * 1 * 1 = 1

// 5 → 5 * 5 * 5 = 125

// 3 → 3 * 3 * 3 = 27
