//ES5 ÏΩúÎ∞±Ìï®Ïàò
//ES6 Promise Í∞ùÏ≤¥
//ES7 async.await (syntatic sugar) ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°úÎäî Ïó¨Ï†ÑÌûà promise ÏÇ¨Ïö©

const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

async function fetchNumbers() {
  // Ìï¥Îãπ Ìï®ÏàòÍ∞Ä promiseÎ•º Î∞òÌôòÌïúÎã§
  await delay(2000); // await : asyncÏóêÏÑúÎßå ÏÇ¨Ïö© Í∞ÄÎä•, Ìï¥Îãπ promiseÍ∞Ä Ïù¥ÌñâÎê† Îïå ÍπåÏßÄ ÎåÄÍ∏∞
  return 2;
}

fetchNumbers() //
  .then(console.log);

//Î≥ëÎ†¨ Ï≤òÎ¶¨
const getSunIcon = async () => {
  await delay(2000);
  return "‚òÄÔ∏è";
};

const getWaveIcon = async () => {
  await delay(1000);
  return "üåä";
};

const getCloudIcon = async () => {
  await delay(2000);
  return "‚òÅÔ∏è";
};

const getAllWeatherIconsAsyncs = async () => {
  console.time();
  const [sun, wave, cloud] = await Promise.allSettled([
    // promise.allÏùò Îã®Ï†ê? 3Í∞úÏ§ë ÌïòÎÇòÎßå ÏóêÎü¨ÎÇòÎèÑ ÎÇòÎ®∏ÏßÄ 2Í∞úÎèÑ Ï∫îÏä¨
    // allSettled -> Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú Í¥ÄÎ¶¨
    getSunIcon(),
    getWaveIcon(),
    getCloudIcon(),
  ]);
  console.log(sun, wave, cloud);
  console.timeEnd();
};
getAllWeatherIconsAsyncs();
console.log("hello");

//promise => catch()
// async-awiat => try/catch
async function getPosts() {
  try {
    const res = await fetch("https://jsonplaceholder.typicode.com/posts"); // reponseÍ∞ùÏ≤¥ Î∞õÏùå
    const data = await res.json(); //JSON -> jSÍ∞ùÏ≤¥
    console.log(data);
  } catch (e) {
    console.error(e);
  }
}

getPosts();
